# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'sugar-free-healthy-diet'
      cliProjectName: 'sugar-free-healthy-diet'
      cliSources: '.'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: SonarQubeAnalyze@4
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))    

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        docker-compose -f docker-compose.test.yaml -f docker-compose.test.pipeline.yaml build
        docker-compose -f docker-compose.test.yaml -f docker-compose.test.pipeline.yaml up
