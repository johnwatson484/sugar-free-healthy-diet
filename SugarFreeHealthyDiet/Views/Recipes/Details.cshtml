@model SugarFreeHealthyDiet.Models.Recipe

@{
    ViewBag.Title = Model.Title;
}

@using SugarFreeHealthyDiet.Extensions;

<h2>@Html.DisplayFor(model => model.Title)</h2>

<div class="col-12">
    <p class="pull-right">
        @Html.ActionLink("Back to Recipes", "Index")
        @if (User.IsInRole("Admin"))
        {
            @:| @Html.ActionLink("Edit", "Edit", new { id = Model.RecipeId }) | @Html.ActionLink("Delete", "Delete", new { id = Model.RecipeId })
        }
    </p>
</div>

<div class="row" style="margin-bottom:10px;">
    <div class="col-8 col-lg-offset-2">
        @if (Model.Image != null)
        {
            <img class="recipe-image recipe-image-large" alt="@Model.Title" src="data:image;base64,@System.Convert.ToBase64String(Model.Image)" />
        }
        else
        {
            <img class="recipe-image recipe-image-large" alt="@Model.Title" src="~/images/placeholder.jpg" />
        }
    </div>
</div>

<div class="col-12">
    @if (User.IsInRole("Admin"))
    {
        <p><i class="@(Model.Active ? "fas fa-check-circle" : "fas fa-times-circle")" style="color:@(Model.Active ? "#258039" : "#a32b1a")"></i> @(Model.Active ? "Active" : "Inactive")</p>
    }
    <p><i class="far fa-clock"></i> Duration - @Model.GetDuration()</p>
    <p><i class="fas fa-utensils"></i> Servings - @Html.DisplayFor(model => model.Servings)</p>
    @if (Model.Vegetarian)
    {
        <p><i class="fas fa-carrot"></i> @Html.DisplayNameFor(model => model.Vegetarian)</p>
    }
    @if (Model.Vegan)
    {
        <p><i class="fas fa-seedling"></i> @Html.DisplayNameFor(model => model.Vegan)</p>
    }
</div>

<div class="col-12">
    <p>@Html.PreserveNewLine(Model.Description)</p>
</div>

<div class="col-4">
    <h3>Ingredients</h3>
    <p>@Html.PreserveNewLine(Model.Ingredients)</p>
</div>

<div class="col-8">
    <h3>Directions</h3>
    <p>@Html.PreserveNewLine(Model.Directions)</p>
</div>
